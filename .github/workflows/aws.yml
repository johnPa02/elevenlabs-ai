name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_NAME: elevenlabs-ai

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (tar)
      run: |
        docker build -t $PROJECT_NAME:prod -f deploy/Dockerfile .
        docker save $PROJECT_NAME:prod -o image.tar
        ls -lh

    - name: Copy artifacts manually
      run: |
        scp -i <(echo "${{ secrets.EC2_PRIVATE_KEY }}") -o StrictHostKeyChecking=no \
          image.tar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/${{ env.PROJECT_NAME }}/
    
        scp -i <(echo "${{ secrets.EC2_PRIVATE_KEY }}") -o StrictHostKeyChecking=no \
          deploy/* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/${{ env.PROJECT_NAME }}/deploy/



    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/${PROJECT_NAME}

          docker load -i image.tar

          printf "%s" "${{ secrets.ENV_FILE }}" > .env

          # Restart containers
          docker compose -f docker-compose.yml down --remove-orphans || true
          docker compose -f docker-compose.yml up -d

          echo "⏳ Waiting for service to become healthy..."
          for i in {1..12}; do
            if curl -fs http://localhost:8000/health > /dev/null; then
              echo "✅ Service is healthy"
              exit 0
            fi
            echo "⏳ Still waiting... ($i/12)"
            sleep 5
          done

          echo "❌ Service failed healthcheck"
          exit 1
